# Http-server port
server.port = 9010

# Datasource
spring.datasource.url=jdbc:oracle:thin:@<HOST:localhost>:<PORT:1521>:<SID:XE>
spring.datasource.username=<username>
spring.datasource.password=<password>

# Format : user:password, one by line or separated by comma
javamelody.authorized-users = username:password

# Lotju-test v2 soap api
metadata.server.address.tms=<https://LOTJU/LAMMetatiedot/v2>
metadata.server.address.camera=<https://LOTJU/KameraPerustiedot/v2>
metadata.server.address.weather=<https://LOTJU/TiesaaPerustiedot/v2>

# Road conditions api
roadConditions.baseUrl=http://keli.foreca.fi/digitraffic/

# Metadata update frequencies in ms, 43200000 ms = 12 h
cameraStationUpdateJob.frequency=43200000
tmsStationUpdateJob.frequency=43200000
weatherStationUpdateJob.frequency=43200000
roadStationsStatusUpdateJob.frequency=3600000
forecastSectionCoordinatesUpdateJob.frequency=86400000
forecastSectionWeatherUpdateJob.frequency=300000
locationsMetadataUpdateJob.frequency=86400000
travelTimeMediansUpdateJob.frequency=60000
travelTimeMeasurementsUpdateJob.frequency=60000

# Weathercam url for public fetch. Append camera preset + .jpg to get image url
weathercam.baseUrl=http://weathercam-test.digitraffic.fi/

# SFTP settings for camera image upload
camera-image-uploader.sftp.host = localhost
camera-image-uploader.sftp.port = 2232
camera-image-uploader.sftp.user = digitraffic
camera-image-uploader.sftp.knownHostsPath = file:src/test/resources/sftp/client_known_hosts
camera-image-uploader.sftp.privateKeyPath = file:src/test/resources/sftp/client_id_rsa
camera-image-uploader.sftp.privateKeyPassphrase = digitraffic
camera-image-uploader.sftp.uploadFolder = weathercam-test.digitraffic.fi

traveltime.PKS.medians.url=https://birch.nctr.co.uk/xml/pks_mtp_ss.xml
traveltime.PKS.individual.url=https://birch.nctr.co.uk/xml/pks_mtp_obs.xml
traveltime.PKS.metadata.url=https://birch.nctr.co.uk/xml/pks_static12.xml
traveltime.PKS.username=
traveltime.PKS.password=

# JMS settings

# JMS Sonic 2013 8.6.0
jms.connectionUrls=tcp://ip:port,tcp://ip:port
jms.userId=<username>
jms.password=<password>

# Old sonic test for datex2
jms.datex2.connectionUrls=tcp://ip:port,tcp://ip:port
jms.datex2.userId=<password>
jms.datex2.password=<password>

# JMS queues
jms.weather.inQueue=topic://LOTJU.TiesaaKeruu.Tietovirta.OutTopic
jms.tms.inQueue=topic://LOTJU.LAMKeruu.Tietovirta.OutTopic
jms.camera.inQueue=topic://Digitraffic.KameraKeruu.Tietovirta.InTopic
jms.datex2.inQueue=queue://T-LOIK_Liikennetiedote.Digitraffic.Datex2.InQ

# Services enabled/disabled

# If set to false web web controllers are not activated. Should be false for daemon processes.
# controllers.enabled=false

# Is metadata updates on. Should be true only for daemon process.
quartz.enabled=true

# JMS queue enabled/disabled (Only daemond should have these enabled)
jms.weather.enabled=false
jms.tms.enabled=false
jms.camera.enabled=false
jms.datex2.enabled=true

# Websocket stream of LAM sensor values
websocket.tms.enabled=true