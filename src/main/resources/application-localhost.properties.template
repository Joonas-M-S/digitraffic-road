# Http-server port
server.port = 9010

# Datasource
road.datasource.url=jdbc:postgresql://localhost:54322/road?reWriteBatchedInserts=true&ApplicationName=testRoadApplication
road.datasource.username=road
road.datasource.password=road

mqtt.server.url=tcp://address:port
mqtt.server.username=
mqtt.server.password=

# Lotju SOAP APIs
metadata.server.address.tms=http://localhost:9011/LOTJU/LAMMetatiedot/v5
metadata.server.address.camera=http://localhost:9011/LOTJU/KameraPerustiedot/v7
metadata.server.address.weather=http://localhost:9011/LOTJU/TiesaaPerustiedot/v4

# Metadata update frequencies in ms
cameraStationUpdateJob.frequency=43200000
tmsStationUpdateJob.frequency=43200000
weatherStationUpdateJob.frequency=43200000
roadStationsStatusUpdateJob.frequency=3600000
forecastSectionCoordinatesUpdateJob.frequency=86400000
forecastSectionWeatherUpdateJob.frequency=300000
locationsMetadataUpdateJob.frequency=86400000
datex2TrafficAlertMessageUpdateJob.frequency=180000
datex2RoadworksMessageUpdateJob.frequency=3600000
datex2WeightRestrictionsMessageUpdateJob.frequency=3600000

# Weathercam url for public fetch. Append camera preset + .jpg to get image url
weathercam.baseUrl=http://weathercam-aws-test.digitraffic.fi/

# SFTP settings for camera image upload
camera-image-uploader.sftp.host = aineistot.liikennevirasto.fi
camera-image-uploader.sftp.user = digitraffic-aws-test
camera-image-uploader.sftp.privateKeyPassphrase = tyokaverisi-halusi-kiittaa
camera-image-uploader.sftp.uploadFolder = weathercam-aws-test.digitraffic.fi

# JMS settings

# Sonja
jms.sonja.connection.enabled=false
jms.connectionUrls=
jms.userId=
jms.password=

# Sonja for datex2
jms.datex2.connectionUrls=
jms.datex2.userId=
jms.datex2.password=

# JMS topics
jms.weather.inQueue=topic://LOTJU.TiesaaKeruu.Tietovirta.BIN.OutTopic
jms.tms.inQueue=topic://LOTJU.LAMKeruu.Tietovirta.BIN.Ajantasa.OutTopic,topic://LOTJU.LAMKeruu.Tietovirta.BIN.Reaali.OutTopic
jms.camera.inQueue=topic://LOTJU.KameraKeruu.Tietovirta.BIN.OutTopic
jms.datex2.inQueue=queue://T-LOIK_Liikennetiedote.Digitraffic.Datex2.InQ

# Services enabled/disabled

# daemon or web
app.type=web

# Web application type. Should be none for daemon process
spring.main.web-application-type=servlet

# Is metadata updates on. Should be true only for daemon process.
quartz.enabled=false

# if set to false no messages are sent to mqtt.  Should be true for daemon process
mqtt.enabled=true
# Is TMS messages available. Should be true for daemon process
mqtt.tms.enabled=true
# Is WEATHER messages available
mqtt.weather.enabled=true

# JMS queue enabled/disabled (Only daemon should have these enabled)
jms.weather.enabled=false
jms.tms.enabled=false
jms.camera.enabled=false
jms.datex2.enabled=false

# Disable jobs. Format: quartz.{jobClassName}.enabled = false
# Ie. quartz.CameraMetadataUpdateJob.enabled = false
# quartz.CameraMetadataUpdateJob.enabled = false
# quartz.CameraStationsStatusMetadataUpdateJob.enabled = false
# quartz.Datex2RoadworksMessageUpdateJob.enabled = false
# quartz.Datex2TrafficAlertMessageUpdateJob.enabled = false
# quartz.Datex2WeightRestrictionsMessageUpdateJob.enabled = false
# quartz.ForecastSectionCoordinatesMetadataUpdateJob.enabled = false
# quartz.ForecastSectionWeatherUpdateJob.enabled = false
# quartz.LocationMetadataUpdateJob.enabled = false
# quartz.TmsStationMetadataUpdateJob.enabled = false
# quartz.TmsStationsStatusMetadataUpdateJob.enabled = false
# quartz.WeatherStationMetadataUpdateJob.enabled = true
# quartz.WeatherStationsStatusMetadataUpdateJob.enabled = false

# Developer life improvements
logging.level.root=INFO
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE