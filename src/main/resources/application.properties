# Default profile for dev is localhost
spring.profiles.active=localhost

# Common db config
# See: http://stackoverflow.com/questions/30451470/connection-to-db-dies-after-424-in-spring-boot-jpa-hibernate
#      http://www.tomcatexpert.com/blog/2010/04/01/configuring-jdbc-pool-high-concurrency
spring.datasource.type=oracle.jdbc.pool.OracleDataSource
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.jpa.properties.hibernate.jdbc.batch_size=100
# 10g dialect for 11g also
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

# Use ISO-8601 date format
spring.jackson.serialization.write_dates_as_timestamps=false
# Pretty json
spring.jackson.serialization.indent_output=true

# Limits sensor values collected in weather station web service messages,
# based on measurement time in minutes. Values which are more than specified
# minutes older than latest sensor values for the station, are filtered out.
# 1440 min = 24 h
weatherStation.sensorValueTimeLimitInMinutes=1440

# Limits sensor values collected in tms station web service messages,
# based on measurement time in minutes. Values which are more than specified
# minutes older than latest sensor values for the station, are filtered out.
# 1440 min = 24 h
tmsStation.sensorValueTimeLimitInMinutes=1440

# Healtcheck -> /details/health
management.context-path=/details
endpoints.enabled=false
endpoints.health.enabled=true
endpoints.health.sensitive=true

# JMS settings

# How often connection and lock state is checked
jms.connection.intervalMs=2000
# How often jms messages are drained from queue
jms.queue.pollingIntervalMs = 100

# TMC locations url
metadata.tms.url = http://aineistot.liikennevirasto.fi/tmc/noncertified/

# How often websocket sender shoudl check for new sensor values
websocket.tms.pollingIntervalMs = 1000
