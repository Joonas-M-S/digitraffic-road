name: Install nginx
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        type: environment
        default: 'test'
      config-repo-branch:
        description: 'Branch or tag of CI-repo'
        required: true
        default: 'master'
jobs:
  log-parameters:
    runs-on: ubuntu-20.04
    steps:
      -   name: Create parameters.txt
          run: |
            echo "User ${{ github.actor }} started install on $(date)" > parameters.txt
            echo "Environment ${{ github.event.inputs.env }}" >> parameters.txt
            echo "config-repo-branch ${{ github.event.inputs.config-repo-branch }}" >> parameters.txt
      -   name: Upload parameters.txt
          uses: actions/upload-artifact@v3
          with:
            name: parameters.txt
            path: parameters.txt
  image:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
      actions: read
    environment: ${{ github.event.inputs.env }}
    steps:
      - name: Checkout CI-repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.CONFIG_REPO_NAME }}
          ssh-key: ${{ secrets.CONFIG_REPO_SSH_KEY }}
          ref: ${{ inputs.config-repo-branch }}
          path: digitraffic-ci
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: gh-actions-install-image-road-nginx-${{ github.event.inputs.env }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build image
        run: |
          cd digitraffic-ci/aws/nginx

          docker build --no-cache \
              --build-arg ENVIRONMENT=${{ github.event.inputs.env }} \
              --build-arg APPNAME=road \
              -t ${{ secrets.ECR_URL }}/dt-road-nginx-repository:latest \
              --pull=true --file=Dockerfile .
          docker push ${{ secrets.ECR_URL }}/dt-road-nginx-repository:latest
      - name: Update nginx task-def
        id: update
        uses: tmfg/digitraffic-actions@update-task-def/v1
        with:
          task-def-file-name: road-${{ github.event.inputs.env }}-nginx
          family-name: road-${{ github.event.inputs.env }}-nginx
          image-arn: ${{ secrets.ECR_URL }}/dt-road-nginx-repository:latest
          aws-role: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          ci-repo-url: ${{ secrets.CONFIG_REPO_NAME }}
          ci-repo-branch: ${{ github.event.inputs.config-repo-branch }}
          ci-ssh-key: ${{ secrets.CONFIG_REPO_SSH_KEY }}
      - name: Update nginx service
        uses: tmfg/digitraffic-actions@ecs-service-update/v1
        with:
          aws-role: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          service-name: road-${{ github.event.inputs.env }}-nginx-service
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          task-definition: road-${{ github.event.inputs.env }}-nginx:latest
          desired-count: 1
