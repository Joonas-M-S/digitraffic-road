name: Install
on:
    workflow_dispatch:
        inputs:
            env:
                description: 'Environment'
                required: true
                type: environment
                default: 'test'
            ci-repo-branch:
                description: 'Branch or tag of CI-repo'
                required: true
                default: 'master'
jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
            actions: read
        environment: ${{ github.event.inputs.env }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Checkout dependencies
              uses: actions/checkout@v3
              with:
                repository: tmfg/digitraffic-build-dependencies
                ssh-key: ${{secrets.DEPENDENCY_SSH_KEY}}
                path: digitraffic-build-dependencies
            - name: Setup dependencies
              run: cp -R digitraffic-build-dependencies/ ~/.m2/
            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '14'
            - name: Build package
              run: |
                  mvn install -DskipTests=true -Ddependency-check.skip=true

                  cp target/*.jar road.jar
            - name: Upload jar
              uses: actions/upload-artifact@v3
              with:
                name: road.jar
                path: road.jar
            - name: Notify Slack
              if: failure()
              uses: 8398a7/action-slack@v3
              with:
                status: failure
                text: FAILED Road deploy/build
                fields: repo, job, took
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    install:
        needs: build
        strategy:
            matrix:
                app: [daemon, web, db]
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
            actions: read
        environment: ${{ github.event.inputs.env }}
        steps:
            - name: Checkout CI-repo
              uses: actions/checkout@v3
              with:
                repository: ${{ secrets.CI_REPO_URL }}
                ssh-key: ${{ secrets.CI_SSH_KEY }}
                ref: ${{ inputs.ci-repo-branch }}
            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    role-to-assume: ${{ secrets.AWS_ROLE }}
                    role-session-name: gh-actions-install-road-${{ github.event.inputs.env }}
                    aws-region: ${{ secrets.AWS_REGION }}
            -   name: Login to Amazon ECR
                uses: aws-actions/amazon-ecr-login@v1
            -   name: Download jar
                uses: actions/download-artifact@master
                with:
                    name: road.jar
            - name: Build docker image for daemon
              run: |
                  ls
                  ls digitraffic-ci
                  ls digitraffic-ci/aws

                  docker build --no-cache \
                    --build-arg ENV=${{ github.event.inputs.env }} \
                    --build-arg JAR_FILE=road.jar \
                    --build-arg PROPERTY_FILE=conf/road-${{ github.event.inputs.env }}-${{ matrix.app }}.properties \
                    -t ${{ secrets.ECR_URL }}/dt-road-${{ matrix.app }}-repository:${GITHUB_SHA} \
                    --pull=true --file=digitraffic-ci/aws/Dockerfile-road digitraffic-ci/aws
                  docker push ${{ secrets.ECR_URL }}/dt-road-${{ matrix.app }}-repository:${GITHUB_SHA}
            - name: Notify Slack
              if: failure()
              uses: 8398a7/action-slack@v3
              with:
                  status: failure
                  text: FAILED Road deploy/install
                  fields: repo, job, took
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    deploy:
        needs: install
        runs-on: ubuntu-latest
        steps:
            - name: debug
              run: echo About to deploy